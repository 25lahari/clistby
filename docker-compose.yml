version: '3.8'

services:
  prod:
    build:
      context: .
      target: prod
    volumes:
      - static_files:/usr/src/clist/staticfiles/
      - media_files:/usr/src/clist/mediafiles/
      - ./logs/production:/usr/src/clist/logs/
      - ./legacy/logs/:/usr/src/clist/logs/legacy/
    depends_on:
      - db
      - memcached
    secrets:
      - db_conf
      - sentry_conf
    env_file:
      - ./.env.supervisor
      - ./.env.proxylist
    ports:
      - 10043:9043
    restart: always
  dev:
    build:
      context: .
      target: dev
    volumes:
      - ./src/:/usr/src/clist/
      - ./legacy/api/:/usr/src/clist/legacy/api/
      - ./src/static:/usr/src/clist/staticfiles/
      - media_files:/usr/src/clist/mediafiles/
      - ./logs/development:/usr/src/clist/logs/
      - ./legacy/logs/:/usr/src/clist/logs/legacy/
    depends_on:
      - db
    secrets:
      - db_conf
      - sentry_conf
    ports:
      - ${CLIST_DEV_PORT:-10042}:10042
    env_file:
      - ./.env.proxylist
    restart: always
  memcached:
    image: memcached
    restart: always
  legacy:
    build: ./legacy
    volumes:
      - ./legacy:/usr/src/legacy/
    depends_on:
      - db
    secrets:
      - db_conf
      - sentry_conf
    restart: always
  pgadmin:
    image: dpage/pgadmin4
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    env_file:
      - ./.env.db
    depends_on:
      - db
    restart: always
  db:
    image: postgres:14.3-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.db
    command: >
      postgres
      -c max_connections=50
      -c shared_buffers=1GB
      -c work_mem=20MB
      -c maintenance_work_mem=200MB
      -c effective_cache_size=2GB
      -c checkpoint_timeout=30min
      -c max_wal_size=4GB
      -c min_wal_size=320MB
      -c bgwriter_delay=20
    shm_size: 2gb
    restart: always
  nginx:
    build:
      context: .
      target: nginx
    volumes:
      - static_files:/staticfiles/
      - media_files:/mediafiles/
      - ./legacy:/usr/src/legacy/
      - ./nginx/conf.d:/etc/nginx/conf.d/
      - certbot_www:/var/www/certbot/
      - certbot_conf:/etc/letsencrypt/
      - ./logs/nginx:/var/log/nginx/
    ports:
      - 80:80
      - 443:443
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    restart: always
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./logs/letsencrypt:/var/log/letsencrypt
      - certbot_www:/var/www/certbot/
      - certbot_conf:/etc/letsencrypt/
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 1d & wait $${!}; done;'"
    restart: always
  loggly:
    build:
      context: .
      target: loggly
    volumes:
      - ./logs/:/logs/
    secrets:
      - loggly_token
    restart: always

secrets:
  db_conf:
    file: ./.env.db
  sentry_conf:
    file: ./.env.sentry
  loggly_token:
    file: ./loggly/.env.token

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/volumes/postgres_data
  pgadmin_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/volumes/pgadmin
  static_files:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/volumes/static_files
  media_files:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/volumes/media_files
  certbot_www:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/volumes/certbot_www
  certbot_conf:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/volumes/certbot_conf
